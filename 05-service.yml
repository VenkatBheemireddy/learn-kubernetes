#code to create ClusterIP service
apiVersion: v1
kind: Service
metadata:
  name: nginx-cip
spec:
  selector:
    appName: nginx
    demoFor: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
#code to create Pod
apiVersion: v1
kind: Pod
metadata:
  name: nginx-cip
  labels:
    appName: nginx
    demoFor: ClusterIP
spec:
  containers:
    - name: nginx
      image: nginx:1.19
      ports:
        - containerPort: 80
---
#code to create NodePort service
apiVersion: v1
kind: Service   #Says it is a service
metadata:
  name: nginx-np   #name of the service
spec:
  type: NodePort   #type of the service
  selector:
    appName: nginx
    demoFor: ClusterIP  #we are keeping the same name so that same name labels will get pickup
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
#code to create LoadBalancer service
apiVersion: v1
kind: Service   #Says it is a service
metadata:
  name: nginx-lb   #name of the service
spec:
  type: LoadBalancer   #type of the service
  selector:
    appName: nginx
    demoFor: ClusterIP  #we are keeping the same name so that same name labels will get pickup
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minimal-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx-cip   #this is backend service
                port:
                  number: 80
